// Arrow v1.2.0 | Copyright (c) 2013-2014 Daniele Veneroni | Licensed under GPLv3 License
"use strict";window.AudioContext=window.AudioContext||window.webkitAudioContext;if(!window.AudioContext){window.alert("Sorry, your browser doesn't support the Web Audio APIs.");throw new Error("Sorry, your browser doesn't support the Web Audio APIs. Execution Aborted.");}var context=new window.AudioContext();var nodes={touchOSC:context.createOscillator(),touchOSCvolume:context.createGain(),filter:context.createBiquadFilter(),delay:context.createDelay(),feedback:context.createGain(),volume:context.createGain(),analyser:context.createAnalyser(),script:context.createScriptProcessor(2048,1,1)};nodes.touchOSC.type=waveSelect.val();nodes.touchOSC.frequency.value=0;nodes.touchOSC.detune.value=0;nodes.touchOSCvolume.gain.value=1;nodes.filter.type=filterSelect.val();nodes.filter.frequency.value=context.sampleRate/2;nodes.filter.Q.value=0;nodes.filter.gain.value=0;nodes.delay.delayTime.value=0;nodes.feedback.gain.value=0;nodes.volume.gain.value=0.5;nodes.analyser.smoothingTimeConstant=0.3;nodes.analyser.fftSize=spectrumSize.val();nodes.touchOSC.connect(nodes.touchOSCvolume);nodes.touchOSCvolume.connect(nodes.filter);nodes.filter.connect(nodes.volume);nodes.filter.connect(nodes.delay);nodes.delay.connect(nodes.feedback);nodes.feedback.connect(nodes.delay);nodes.feedback.connect(nodes.volume);nodes.volume.connect(context.destination);nodes.volume.connect(nodes.analyser);nodes.analyser.connect(nodes.script);nodes.script.connect(context.destination);nodes.script.onaudioprocess=function(){var a=new Uint8Array(nodes.analyser.frequencyBinCount);nodes.analyser.getByteFrequencyData(a);drawSpectrum(a);};function oscFrequencyChange(f){var c=27.5,d=4186.01,a=f.x*1/util.docWidth,b=Math.log(d/c)/Math.LN2,g=Math.pow(2,b*(a-1));nodes.touchOSC.frequency.value=d*g;}function vcfFrequencyChange(f){var c=27.5,d=context.sampleRate/2,a=1-(f.y*1/util.docHeight),b=Math.log(d/c)/Math.LN2,g=Math.pow(2,b*(a-1));nodes.filter.frequency.value=d*g;filterFrequencyLabel.text(nodes.filter.frequency.value.toFixed(2)+"Hz");}function touch(a){try{nodes.touchOSC.start(0);}catch(a){}nodes.touchOSCvolume.gain.value=1;oscFrequencyChange(a);vcfFrequencyChange(a);a.preventDefault();return false;}var tapping=false;$$("#pad").on("pointerdown",function(a){tapping=true;touch(a);}).on("pointermove",function(a){if(tapping){touch(a);}}).on("pointerup mouseout",function(){tapping=false;nodes.touchOSCvolume.gain.value=0;});var keyboard=qwertyHancock({id:"keyboard",width:util.docWidth,height:util.docHeigth/2,octaves:2,startNote:"C4",whiteNotesColour:"white",blackNotesColour:"black",hoverColour:"#f3e939",keyboardLayout:"en"});var keyNodes=[];keyboard.keyDown(function(b,d){var a=context.createOscillator();a.type=waveSelect.val();a.frequency.value=d;a.detune.value=oscDetuneRange.val();a.connect(nodes.filter);try{a.start(0);}catch(c){}keyNodes.push(a);});keyboard.keyUp(function(b,c){for(var a=0;a<keyNodes.length;a++){if(Math.round(keyNodes[a].frequency.value)===Math.round(c)){keyNodes[a].stop(0);keyNodes[a].disconnect();keyNodes.splice(a,1);}}});configurePreset(presets[presetSelect.val()]);$$(window).on("load",function(){$$("#loading").hide();});
